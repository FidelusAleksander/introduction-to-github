name: Step 3 # Open a pull request

# Checks if the learner completed tasks for step 3.
# - Triggers when the user creates or edits the pull request.
# - Checks the pull request title and description. Adds a PR comment.
# - If all checks pass, the workflow is disabled so it doesn't run again. As such, workflow status badge will change to green.

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - edited

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_4_FILE: ".github/steps/4-merge-your-pull-request.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.5.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: find_exercise
    if: |
      !github.event.repository.is_template &&
      github.head_ref == 'my-first-branch'
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.5.0

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check pull request title
        id: check-pr-title
        continue-on-error: true
        uses: skills/action-keyphrase-checker@v1
        with:
          text: ${{ github.event.pull_request.title }}
          keyphrase: "Add my first file"
          case-sensitive: false

      - name: Check pull request description
        id: check-pr-description
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const prBody = context.payload.pull_request.body || '';

            if (prBody.trim().length > 0) {
              core.setOutput('STEP_MESSAGE', 'Pull request has a description');
              return;
            } else {
              core.setOutput('STEP_MESSAGE', 'Pull request description is empty');
              core.setFailed('Pull request description is required');
            }

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          template-vars: |
            step_number: 3
            passed: ${{ !contains(steps.*.outcome, 'failure') }}
            results_table:
              - description: "Pull request title is 'Add my first file'"
                passed: ${{ steps.check-pr-title.outcome == 'success' }}
              - description: ${{ steps.check-pr-description.outputs.STEP_MESSAGE }}
                passed: ${{ steps.check-pr-description.outcome == 'success' }}

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number: 4

      - name: Update comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    uses: skills/exercise-toolkit/.github/workflows/post-step-content.yml@post-next-step-content
    with:
      issue-url: ${{ needs.find_exercise.outputs.issue-url }}
      step-content-file: ${{ env.STEP_4_FILE }}
      enable-workflows: Step 4
